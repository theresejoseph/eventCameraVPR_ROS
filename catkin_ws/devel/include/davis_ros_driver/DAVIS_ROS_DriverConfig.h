//#line 2 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the davis_ros_driver package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __davis_ros_driver__DAVIS_ROS_DRIVERCONFIG_H__
#define __davis_ros_driver__DAVIS_ROS_DRIVERCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace davis_ros_driver
{
  class DAVIS_ROS_DriverConfigStatics;

  class DAVIS_ROS_DriverConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      virtual ~AbstractParamDescription() = default;

      virtual void clamp(DAVIS_ROS_DriverConfig &config, const DAVIS_ROS_DriverConfig &max, const DAVIS_ROS_DriverConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const DAVIS_ROS_DriverConfig &config1, const DAVIS_ROS_DriverConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, DAVIS_ROS_DriverConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const DAVIS_ROS_DriverConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, DAVIS_ROS_DriverConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const DAVIS_ROS_DriverConfig &config) const = 0;
      virtual void getValue(const DAVIS_ROS_DriverConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T DAVIS_ROS_DriverConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T DAVIS_ROS_DriverConfig::* field;

      virtual void clamp(DAVIS_ROS_DriverConfig &config, const DAVIS_ROS_DriverConfig &max, const DAVIS_ROS_DriverConfig &min) const override
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const DAVIS_ROS_DriverConfig &config1, const DAVIS_ROS_DriverConfig &config2) const override
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, DAVIS_ROS_DriverConfig &config) const override
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const DAVIS_ROS_DriverConfig &config) const override
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, DAVIS_ROS_DriverConfig &config) const override
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const DAVIS_ROS_DriverConfig &config) const override
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const DAVIS_ROS_DriverConfig &config, boost::any &val) const override
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      virtual ~AbstractGroupDescription() = default;

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, DAVIS_ROS_DriverConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, DAVIS_ROS_DriverConfig &top) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const override
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(DAVIS_ROS_DriverConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("streaming_rate"==(*_i)->name){streaming_rate = boost::any_cast<int>(val);}
        if("max_events"==(*_i)->name){max_events = boost::any_cast<int>(val);}
        if("aps_enabled"==(*_i)->name){aps_enabled = boost::any_cast<bool>(val);}
        if("dvs_enabled"==(*_i)->name){dvs_enabled = boost::any_cast<bool>(val);}
        if("imu_enabled"==(*_i)->name){imu_enabled = boost::any_cast<bool>(val);}
        if("autoexposure_enabled"==(*_i)->name){autoexposure_enabled = boost::any_cast<bool>(val);}
        if("autoexposure_gain"==(*_i)->name){autoexposure_gain = boost::any_cast<int>(val);}
        if("autoexposure_desired_intensity"==(*_i)->name){autoexposure_desired_intensity = boost::any_cast<int>(val);}
        if("exposure"==(*_i)->name){exposure = boost::any_cast<int>(val);}
        if("frame_mode"==(*_i)->name){frame_mode = boost::any_cast<int>(val);}
        if("frame_interval"==(*_i)->name){frame_interval = boost::any_cast<int>(val);}
        if("imu_acc_scale"==(*_i)->name){imu_acc_scale = boost::any_cast<int>(val);}
        if("imu_gyro_scale"==(*_i)->name){imu_gyro_scale = boost::any_cast<int>(val);}
        if("imu_low_pass_filter"==(*_i)->name){imu_low_pass_filter = boost::any_cast<int>(val);}
      }
    }

    int streaming_rate;
int max_events;
bool aps_enabled;
bool dvs_enabled;
bool imu_enabled;
bool autoexposure_enabled;
int autoexposure_gain;
int autoexposure_desired_intensity;
int exposure;
int frame_mode;
int frame_interval;
int imu_acc_scale;
int imu_gyro_scale;
int imu_low_pass_filter;

    bool state;
    std::string name;

    class HARDWARE_FILTERS
{
  public:
    HARDWARE_FILTERS()
    {
      state = true;
      name = "Hardware_Filters";
    }

    void setParams(DAVIS_ROS_DriverConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("background_activity_filter_enabled"==(*_i)->name){background_activity_filter_enabled = boost::any_cast<bool>(val);}
        if("background_activity_filter_time"==(*_i)->name){background_activity_filter_time = boost::any_cast<int>(val);}
        if("refractory_period_enabled"==(*_i)->name){refractory_period_enabled = boost::any_cast<bool>(val);}
        if("refractory_period_time"==(*_i)->name){refractory_period_time = boost::any_cast<int>(val);}
        if("skip_enabled"==(*_i)->name){skip_enabled = boost::any_cast<bool>(val);}
        if("skip_every"==(*_i)->name){skip_every = boost::any_cast<int>(val);}
        if("polarity_suppress"==(*_i)->name){polarity_suppress = boost::any_cast<bool>(val);}
        if("polarity_suppress_type"==(*_i)->name){polarity_suppress_type = boost::any_cast<bool>(val);}
        if("polarity_flatten"==(*_i)->name){polarity_flatten = boost::any_cast<bool>(val);}
      }
    }

    bool background_activity_filter_enabled;
int background_activity_filter_time;
bool refractory_period_enabled;
int refractory_period_time;
bool skip_enabled;
int skip_every;
bool polarity_suppress;
bool polarity_suppress_type;
bool polarity_flatten;

    bool state;
    std::string name;

    class DVS_REGION_OF_INTEREST
{
  public:
    DVS_REGION_OF_INTEREST()
    {
      state = true;
      name = "DVS_region_of_interest";
    }

    void setParams(DAVIS_ROS_DriverConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("roi_start_column"==(*_i)->name){roi_start_column = boost::any_cast<int>(val);}
        if("roi_start_row"==(*_i)->name){roi_start_row = boost::any_cast<int>(val);}
        if("roi_end_column"==(*_i)->name){roi_end_column = boost::any_cast<int>(val);}
        if("roi_end_row"==(*_i)->name){roi_end_row = boost::any_cast<int>(val);}
      }
    }

    int roi_start_column;
int roi_start_row;
int roi_end_column;
int roi_end_row;

    bool state;
    std::string name;

    
}dvs_region_of_interest;

class APS_REGION_OF_INTEREST
{
  public:
    APS_REGION_OF_INTEREST()
    {
      state = true;
      name = "APS_region_of_interest";
    }

    void setParams(DAVIS_ROS_DriverConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("aps_roi_start_column"==(*_i)->name){aps_roi_start_column = boost::any_cast<int>(val);}
        if("aps_roi_start_row"==(*_i)->name){aps_roi_start_row = boost::any_cast<int>(val);}
        if("aps_roi_end_column"==(*_i)->name){aps_roi_end_column = boost::any_cast<int>(val);}
        if("aps_roi_end_row"==(*_i)->name){aps_roi_end_row = boost::any_cast<int>(val);}
      }
    }

    int aps_roi_start_column;
int aps_roi_start_row;
int aps_roi_end_column;
int aps_roi_end_row;

    bool state;
    std::string name;

    
}aps_region_of_interest;

class PIXEL_FILTER
{
  public:
    PIXEL_FILTER()
    {
      state = true;
      name = "Pixel_Filter";
    }

    void setParams(DAVIS_ROS_DriverConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("pixel_0_row"==(*_i)->name){pixel_0_row = boost::any_cast<int>(val);}
        if("pixel_0_column"==(*_i)->name){pixel_0_column = boost::any_cast<int>(val);}
        if("pixel_1_row"==(*_i)->name){pixel_1_row = boost::any_cast<int>(val);}
        if("pixel_1_column"==(*_i)->name){pixel_1_column = boost::any_cast<int>(val);}
        if("pixel_2_row"==(*_i)->name){pixel_2_row = boost::any_cast<int>(val);}
        if("pixel_2_column"==(*_i)->name){pixel_2_column = boost::any_cast<int>(val);}
        if("pixel_3_row"==(*_i)->name){pixel_3_row = boost::any_cast<int>(val);}
        if("pixel_3_column"==(*_i)->name){pixel_3_column = boost::any_cast<int>(val);}
        if("pixel_4_row"==(*_i)->name){pixel_4_row = boost::any_cast<int>(val);}
        if("pixel_4_column"==(*_i)->name){pixel_4_column = boost::any_cast<int>(val);}
        if("pixel_5_row"==(*_i)->name){pixel_5_row = boost::any_cast<int>(val);}
        if("pixel_5_column"==(*_i)->name){pixel_5_column = boost::any_cast<int>(val);}
        if("pixel_6_row"==(*_i)->name){pixel_6_row = boost::any_cast<int>(val);}
        if("pixel_6_column"==(*_i)->name){pixel_6_column = boost::any_cast<int>(val);}
        if("pixel_7_row"==(*_i)->name){pixel_7_row = boost::any_cast<int>(val);}
        if("pixel_7_column"==(*_i)->name){pixel_7_column = boost::any_cast<int>(val);}
        if("pixel_auto_train"==(*_i)->name){pixel_auto_train = boost::any_cast<bool>(val);}
      }
    }

    int pixel_0_row;
int pixel_0_column;
int pixel_1_row;
int pixel_1_column;
int pixel_2_row;
int pixel_2_column;
int pixel_3_row;
int pixel_3_column;
int pixel_4_row;
int pixel_4_column;
int pixel_5_row;
int pixel_5_column;
int pixel_6_row;
int pixel_6_column;
int pixel_7_row;
int pixel_7_column;
bool pixel_auto_train;

    bool state;
    std::string name;

    
}pixel_filter;

}hardware_filters;

class DAVIS_BIASES_STAGE_1
{
  public:
    DAVIS_BIASES_STAGE_1()
    {
      state = true;
      name = "DAVIS_Biases_Stage_1";
    }

    void setParams(DAVIS_ROS_DriverConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("PrBp_coarse"==(*_i)->name){PrBp_coarse = boost::any_cast<int>(val);}
        if("PrBp_fine"==(*_i)->name){PrBp_fine = boost::any_cast<int>(val);}
        if("PrSFBp_coarse"==(*_i)->name){PrSFBp_coarse = boost::any_cast<int>(val);}
        if("PrSFBp_fine"==(*_i)->name){PrSFBp_fine = boost::any_cast<int>(val);}
      }
    }

    int PrBp_coarse;
int PrBp_fine;
int PrSFBp_coarse;
int PrSFBp_fine;

    bool state;
    std::string name;

    
}davis_biases_stage_1;

class DAVIS_BIASES_STAGE_2
{
  public:
    DAVIS_BIASES_STAGE_2()
    {
      state = true;
      name = "DAVIS_Biases_Stage_2";
    }

    void setParams(DAVIS_ROS_DriverConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("DiffBn_coarse"==(*_i)->name){DiffBn_coarse = boost::any_cast<int>(val);}
        if("DiffBn_fine"==(*_i)->name){DiffBn_fine = boost::any_cast<int>(val);}
        if("ONBn_coarse"==(*_i)->name){ONBn_coarse = boost::any_cast<int>(val);}
        if("ONBn_fine"==(*_i)->name){ONBn_fine = boost::any_cast<int>(val);}
        if("OFFBn_coarse"==(*_i)->name){OFFBn_coarse = boost::any_cast<int>(val);}
        if("OFFBn_fine"==(*_i)->name){OFFBn_fine = boost::any_cast<int>(val);}
        if("RefrBp_coarse"==(*_i)->name){RefrBp_coarse = boost::any_cast<int>(val);}
        if("RefrBp_fine"==(*_i)->name){RefrBp_fine = boost::any_cast<int>(val);}
      }
    }

    int DiffBn_coarse;
int DiffBn_fine;
int ONBn_coarse;
int ONBn_fine;
int OFFBn_coarse;
int OFFBn_fine;
int RefrBp_coarse;
int RefrBp_fine;

    bool state;
    std::string name;

    
}davis_biases_stage_2;

class DAVIS_BIASES_APS
{
  public:
    DAVIS_BIASES_APS()
    {
      state = true;
      name = "DAVIS_Biases_APS";
    }

    void setParams(DAVIS_ROS_DriverConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("ADC_RefHigh_volt"==(*_i)->name){ADC_RefHigh_volt = boost::any_cast<int>(val);}
        if("ADC_RefHigh_curr"==(*_i)->name){ADC_RefHigh_curr = boost::any_cast<int>(val);}
        if("ADC_RefLow_volt"==(*_i)->name){ADC_RefLow_volt = boost::any_cast<int>(val);}
        if("ADC_RefLow_curr"==(*_i)->name){ADC_RefLow_curr = boost::any_cast<int>(val);}
      }
    }

    int ADC_RefHigh_volt;
int ADC_RefHigh_curr;
int ADC_RefLow_volt;
int ADC_RefLow_curr;

    bool state;
    std::string name;

    
}davis_biases_aps;

}groups;



//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int streaming_rate;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int max_events;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool aps_enabled;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool dvs_enabled;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool imu_enabled;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool autoexposure_enabled;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int autoexposure_gain;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int autoexposure_desired_intensity;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int exposure;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int frame_mode;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int frame_interval;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int imu_acc_scale;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int imu_gyro_scale;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int imu_low_pass_filter;
//#line 28 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      bool background_activity_filter_enabled;
//#line 29 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int background_activity_filter_time;
//#line 30 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      bool refractory_period_enabled;
//#line 31 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int refractory_period_time;
//#line 32 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      bool skip_enabled;
//#line 33 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int skip_every;
//#line 34 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      bool polarity_suppress;
//#line 35 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      bool polarity_suppress_type;
//#line 36 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      bool polarity_flatten;
//#line 38 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int roi_start_column;
//#line 39 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int roi_start_row;
//#line 40 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int roi_end_column;
//#line 41 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int roi_end_row;
//#line 43 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int aps_roi_start_column;
//#line 44 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int aps_roi_start_row;
//#line 45 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int aps_roi_end_column;
//#line 46 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int aps_roi_end_row;
//#line 48 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_0_row;
//#line 49 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_0_column;
//#line 50 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_1_row;
//#line 51 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_1_column;
//#line 52 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_2_row;
//#line 53 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_2_column;
//#line 54 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_3_row;
//#line 55 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_3_column;
//#line 56 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_4_row;
//#line 57 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_4_column;
//#line 58 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_5_row;
//#line 59 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_5_column;
//#line 60 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_6_row;
//#line 61 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_6_column;
//#line 62 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_7_row;
//#line 63 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int pixel_7_column;
//#line 64 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      bool pixel_auto_train;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int PrBp_coarse;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int PrBp_fine;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int PrSFBp_coarse;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int PrSFBp_fine;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int DiffBn_coarse;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int DiffBn_fine;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int ONBn_coarse;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int ONBn_fine;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int OFFBn_coarse;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int OFFBn_fine;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int RefrBp_coarse;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int RefrBp_fine;
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int ADC_RefHigh_volt;
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int ADC_RefHigh_curr;
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int ADC_RefLow_volt;
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      int ADC_RefLow_curr;
//#line 231 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("DAVIS_ROS_DriverConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const DAVIS_ROS_DriverConfig &__max__ = __getMax__();
      const DAVIS_ROS_DriverConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const DAVIS_ROS_DriverConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const DAVIS_ROS_DriverConfig &__getDefault__();
    static const DAVIS_ROS_DriverConfig &__getMax__();
    static const DAVIS_ROS_DriverConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const DAVIS_ROS_DriverConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void DAVIS_ROS_DriverConfig::ParamDescription<std::string>::clamp(DAVIS_ROS_DriverConfig &config, const DAVIS_ROS_DriverConfig &max, const DAVIS_ROS_DriverConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class DAVIS_ROS_DriverConfigStatics
  {
    friend class DAVIS_ROS_DriverConfig;

    DAVIS_ROS_DriverConfigStatics()
    {
DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT, DAVIS_ROS_DriverConfig> Default("Default", "", 0, 0, true, &DAVIS_ROS_DriverConfig::groups);
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.streaming_rate = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.streaming_rate = 10000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.streaming_rate = 30;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("streaming_rate", "int", 0, "integration time (0 is instant sending)", "", &DAVIS_ROS_DriverConfig::streaming_rate)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("streaming_rate", "int", 0, "integration time (0 is instant sending)", "", &DAVIS_ROS_DriverConfig::streaming_rate)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.max_events = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.max_events = 100000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.max_events = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("max_events", "int", 0, "max. events per packet (0 is no limit)", "", &DAVIS_ROS_DriverConfig::max_events)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("max_events", "int", 0, "max. events per packet (0 is no limit)", "", &DAVIS_ROS_DriverConfig::max_events)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.aps_enabled = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.aps_enabled = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.aps_enabled = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("aps_enabled", "bool", 0, "enables APS", "", &DAVIS_ROS_DriverConfig::aps_enabled)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("aps_enabled", "bool", 0, "enables APS", "", &DAVIS_ROS_DriverConfig::aps_enabled)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.dvs_enabled = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.dvs_enabled = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.dvs_enabled = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("dvs_enabled", "bool", 0, "enables DVS", "", &DAVIS_ROS_DriverConfig::dvs_enabled)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("dvs_enabled", "bool", 0, "enables DVS", "", &DAVIS_ROS_DriverConfig::dvs_enabled)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.imu_enabled = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.imu_enabled = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.imu_enabled = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("imu_enabled", "bool", 0, "enables IMU", "", &DAVIS_ROS_DriverConfig::imu_enabled)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("imu_enabled", "bool", 0, "enables IMU", "", &DAVIS_ROS_DriverConfig::imu_enabled)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.autoexposure_enabled = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.autoexposure_enabled = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.autoexposure_enabled = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("autoexposure_enabled", "bool", 0, "enables the RPG auto-exposure algorithm (experimental)", "", &DAVIS_ROS_DriverConfig::autoexposure_enabled)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("autoexposure_enabled", "bool", 0, "enables the RPG auto-exposure algorithm (experimental)", "", &DAVIS_ROS_DriverConfig::autoexposure_enabled)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.autoexposure_gain = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.autoexposure_gain = 10;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.autoexposure_gain = 3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("autoexposure_gain", "int", 0, "auto-exposure gain (lower: slow response time, without oscillations / higher: faster response time, with oscillations", "", &DAVIS_ROS_DriverConfig::autoexposure_gain)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("autoexposure_gain", "int", 0, "auto-exposure gain (lower: slow response time, without oscillations / higher: faster response time, with oscillations", "", &DAVIS_ROS_DriverConfig::autoexposure_gain)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.autoexposure_desired_intensity = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.autoexposure_desired_intensity = 255;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.autoexposure_desired_intensity = 75;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("autoexposure_desired_intensity", "int", 0, "desired mean image intensity: controls the overall image brightness", "", &DAVIS_ROS_DriverConfig::autoexposure_desired_intensity)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("autoexposure_desired_intensity", "int", 0, "desired mean image intensity: controls the overall image brightness", "", &DAVIS_ROS_DriverConfig::autoexposure_desired_intensity)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exposure = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exposure = 1000000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exposure = 5000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("exposure", "int", 0, "exposure (frame exposure time in microseconds)", "", &DAVIS_ROS_DriverConfig::exposure)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("exposure", "int", 0, "exposure (frame exposure time in microseconds)", "", &DAVIS_ROS_DriverConfig::exposure)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frame_mode = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frame_mode = 2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frame_mode = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("frame_mode", "int", 0, "Desired type of frame output", "{'enum': [{'name': 'Default', 'type': 'int', 'value': 0, 'srcline': 19, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': 'Grayscale for mono cameras and RGB for color cameras', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Grayscale', 'type': 'int', 'value': 1, 'srcline': 20, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': 'Always a grayscale intensity frame', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Original', 'type': 'int', 'value': 2, 'srcline': 21, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': 'Exactly as it comes from the device (will show grid pattern on color cameras)', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Desired type of frame output'}", &DAVIS_ROS_DriverConfig::frame_mode)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("frame_mode", "int", 0, "Desired type of frame output", "{'enum': [{'name': 'Default', 'type': 'int', 'value': 0, 'srcline': 19, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': 'Grayscale for mono cameras and RGB for color cameras', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Grayscale', 'type': 'int', 'value': 1, 'srcline': 20, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': 'Always a grayscale intensity frame', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Original', 'type': 'int', 'value': 2, 'srcline': 21, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': 'Exactly as it comes from the device (will show grid pattern on color cameras)', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Desired type of frame output'}", &DAVIS_ROS_DriverConfig::frame_mode)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frame_interval = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frame_interval = 8388607;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frame_interval = 25000;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("frame_interval", "int", 0, "frame interval (best-effort time between consecutive frames in microseconds)", "", &DAVIS_ROS_DriverConfig::frame_interval)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("frame_interval", "int", 0, "frame interval (best-effort time between consecutive frames in microseconds)", "", &DAVIS_ROS_DriverConfig::frame_interval)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.imu_acc_scale = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.imu_acc_scale = 3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.imu_acc_scale = 3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("imu_acc_scale", "int", 0, "Full scale of the accelerometer", "{'enum': [{'name': '2g', 'type': 'int', 'value': 0, 'srcline': 106, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 2 g', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '4g', 'type': 'int', 'value': 1, 'srcline': 107, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 4 g', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '8g', 'type': 'int', 'value': 2, 'srcline': 108, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 8 g', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '16g', 'type': 'int', 'value': 3, 'srcline': 109, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 16 g', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Full scale of the accelerometer'}", &DAVIS_ROS_DriverConfig::imu_acc_scale)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("imu_acc_scale", "int", 0, "Full scale of the accelerometer", "{'enum': [{'name': '2g', 'type': 'int', 'value': 0, 'srcline': 106, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 2 g', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '4g', 'type': 'int', 'value': 1, 'srcline': 107, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 4 g', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '8g', 'type': 'int', 'value': 2, 'srcline': 108, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 8 g', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '16g', 'type': 'int', 'value': 3, 'srcline': 109, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 16 g', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Full scale of the accelerometer'}", &DAVIS_ROS_DriverConfig::imu_acc_scale)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.imu_gyro_scale = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.imu_gyro_scale = 3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.imu_gyro_scale = 3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("imu_gyro_scale", "int", 0, "Full scale of the gyroscope", "{'enum': [{'name': '250degps', 'type': 'int', 'value': 0, 'srcline': 112, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 250 deg/s', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '500degps', 'type': 'int', 'value': 1, 'srcline': 113, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 500 deg/s', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '1000degps', 'type': 'int', 'value': 2, 'srcline': 114, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 1000 deg/s', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '2000degps', 'type': 'int', 'value': 3, 'srcline': 115, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 2000 deg/s', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Full scale of the gyroscope'}", &DAVIS_ROS_DriverConfig::imu_gyro_scale)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("imu_gyro_scale", "int", 0, "Full scale of the gyroscope", "{'enum': [{'name': '250degps', 'type': 'int', 'value': 0, 'srcline': 112, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 250 deg/s', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '500degps', 'type': 'int', 'value': 1, 'srcline': 113, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 500 deg/s', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '1000degps', 'type': 'int', 'value': 2, 'srcline': 114, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 1000 deg/s', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '2000degps', 'type': 'int', 'value': 3, 'srcline': 115, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '+/- 2000 deg/s', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Full scale of the gyroscope'}", &DAVIS_ROS_DriverConfig::imu_gyro_scale)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.imu_low_pass_filter = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.imu_low_pass_filter = 6;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.imu_low_pass_filter = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("imu_low_pass_filter", "int", 0, "Bandwidth of the low-pass filter applied to the accelerometer/gyroscope", "{'enum': [{'name': '260hz', 'type': 'int', 'value': 0, 'srcline': 118, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '260/256 Hz - delay: 0.0/0.98 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '184hz', 'type': 'int', 'value': 1, 'srcline': 119, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '184/188 Hz - delay: 2.0/1.9 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '94hz', 'type': 'int', 'value': 2, 'srcline': 120, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '94/98 Hz - delay: 3.0/2.8 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '44hz', 'type': 'int', 'value': 3, 'srcline': 121, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '44/42 Hz - delay: 4.9/4.8 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '21hz', 'type': 'int', 'value': 4, 'srcline': 122, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '21/20 Hz - delay: 8.5/8.3 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '10hz', 'type': 'int', 'value': 5, 'srcline': 123, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '10/10 Hz - delay: 13.8/13.4 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '5hz', 'type': 'int', 'value': 6, 'srcline': 124, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '5/5 Hz - delay: 19.0/18.6 ms', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Bandwidth of the low pass filter applied to the accelerometer/gyroscope'}", &DAVIS_ROS_DriverConfig::imu_low_pass_filter)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("imu_low_pass_filter", "int", 0, "Bandwidth of the low-pass filter applied to the accelerometer/gyroscope", "{'enum': [{'name': '260hz', 'type': 'int', 'value': 0, 'srcline': 118, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '260/256 Hz - delay: 0.0/0.98 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '184hz', 'type': 'int', 'value': 1, 'srcline': 119, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '184/188 Hz - delay: 2.0/1.9 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '94hz', 'type': 'int', 'value': 2, 'srcline': 120, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '94/98 Hz - delay: 3.0/2.8 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '44hz', 'type': 'int', 'value': 3, 'srcline': 121, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '44/42 Hz - delay: 4.9/4.8 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '21hz', 'type': 'int', 'value': 4, 'srcline': 122, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '21/20 Hz - delay: 8.5/8.3 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '10hz', 'type': 'int', 'value': 5, 'srcline': 123, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '10/10 Hz - delay: 13.8/13.4 ms', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '5hz', 'type': 'int', 'value': 6, 'srcline': 124, 'srcfile': '/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg', 'description': '5/5 Hz - delay: 19.0/18.6 ms', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Bandwidth of the low pass filter applied to the accelerometer/gyroscope'}", &DAVIS_ROS_DriverConfig::imu_low_pass_filter)));
DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS, DAVIS_ROS_DriverConfig::DEFAULT> Hardware_Filters("Hardware_Filters", "", 0, 1, true, &DAVIS_ROS_DriverConfig::DEFAULT::hardware_filters);
//#line 28 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.background_activity_filter_enabled = 0;
//#line 28 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.background_activity_filter_enabled = 1;
//#line 28 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.background_activity_filter_enabled = 1;
//#line 28 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Hardware_Filters.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("background_activity_filter_enabled", "bool", 1, "enables background activity filter", "", &DAVIS_ROS_DriverConfig::background_activity_filter_enabled)));
//#line 28 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("background_activity_filter_enabled", "bool", 1, "enables background activity filter", "", &DAVIS_ROS_DriverConfig::background_activity_filter_enabled)));
//#line 29 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.background_activity_filter_time = 0;
//#line 29 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.background_activity_filter_time = 400;
//#line 29 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.background_activity_filter_time = 80;
//#line 29 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Hardware_Filters.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("background_activity_filter_time", "int", 1, "background activity filter time (in blocks of 250 microseconds).", "", &DAVIS_ROS_DriverConfig::background_activity_filter_time)));
//#line 29 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("background_activity_filter_time", "int", 1, "background activity filter time (in blocks of 250 microseconds).", "", &DAVIS_ROS_DriverConfig::background_activity_filter_time)));
//#line 30 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.refractory_period_enabled = 0;
//#line 30 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.refractory_period_enabled = 1;
//#line 30 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.refractory_period_enabled = 0;
//#line 30 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Hardware_Filters.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("refractory_period_enabled", "bool", 1, "enables refractory period filter", "", &DAVIS_ROS_DriverConfig::refractory_period_enabled)));
//#line 30 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("refractory_period_enabled", "bool", 1, "enables refractory period filter", "", &DAVIS_ROS_DriverConfig::refractory_period_enabled)));
//#line 31 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.refractory_period_time = 0;
//#line 31 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.refractory_period_time = 20;
//#line 31 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.refractory_period_time = 2;
//#line 31 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Hardware_Filters.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("refractory_period_time", "int", 1, "refractory period time (in blocks of 250 microseconds)", "", &DAVIS_ROS_DriverConfig::refractory_period_time)));
//#line 31 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("refractory_period_time", "int", 1, "refractory period time (in blocks of 250 microseconds)", "", &DAVIS_ROS_DriverConfig::refractory_period_time)));
//#line 32 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.skip_enabled = 0;
//#line 32 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.skip_enabled = 1;
//#line 32 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.skip_enabled = 0;
//#line 32 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Hardware_Filters.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("skip_enabled", "bool", 1, "enables the event skip filter, which throws away one event every N events (decimation filter)", "", &DAVIS_ROS_DriverConfig::skip_enabled)));
//#line 32 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("skip_enabled", "bool", 1, "enables the event skip filter, which throws away one event every N events (decimation filter)", "", &DAVIS_ROS_DriverConfig::skip_enabled)));
//#line 33 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.skip_every = 0;
//#line 33 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.skip_every = 255;
//#line 33 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.skip_every = 0;
//#line 33 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Hardware_Filters.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("skip_every", "int", 1, "number of events to let through before skipping one", "", &DAVIS_ROS_DriverConfig::skip_every)));
//#line 33 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("skip_every", "int", 1, "number of events to let through before skipping one", "", &DAVIS_ROS_DriverConfig::skip_every)));
//#line 34 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.polarity_suppress = 0;
//#line 34 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.polarity_suppress = 1;
//#line 34 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.polarity_suppress = 0;
//#line 34 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Hardware_Filters.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("polarity_suppress", "bool", 1, "suppress one of the two ON/OFF polarities completely", "", &DAVIS_ROS_DriverConfig::polarity_suppress)));
//#line 34 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("polarity_suppress", "bool", 1, "suppress one of the two ON/OFF polarities completely", "", &DAVIS_ROS_DriverConfig::polarity_suppress)));
//#line 35 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.polarity_suppress_type = 0;
//#line 35 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.polarity_suppress_type = 1;
//#line 35 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.polarity_suppress_type = 0;
//#line 35 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Hardware_Filters.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("polarity_suppress_type", "bool", 1, "polarity to suppress (0=OFF, 1=ON)", "", &DAVIS_ROS_DriverConfig::polarity_suppress_type)));
//#line 35 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("polarity_suppress_type", "bool", 1, "polarity to suppress (0=OFF, 1=ON)", "", &DAVIS_ROS_DriverConfig::polarity_suppress_type)));
//#line 36 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.polarity_flatten = 0;
//#line 36 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.polarity_flatten = 1;
//#line 36 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.polarity_flatten = 0;
//#line 36 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Hardware_Filters.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("polarity_flatten", "bool", 1, "flatten all polarities to OFF; applied after supression", "", &DAVIS_ROS_DriverConfig::polarity_flatten)));
//#line 36 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("polarity_flatten", "bool", 1, "flatten all polarities to OFF; applied after supression", "", &DAVIS_ROS_DriverConfig::polarity_flatten)));
DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::DVS_REGION_OF_INTEREST, DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS> DVS_region_of_interest("DVS_region_of_interest", "", 1, 2, true, &DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::dvs_region_of_interest);
//#line 38 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.roi_start_column = 0;
//#line 38 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.roi_start_column = 345;
//#line 38 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.roi_start_column = 0;
//#line 38 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DVS_region_of_interest.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("roi_start_column", "int", 1, "start position on the X axis for DVS region of interest", "", &DAVIS_ROS_DriverConfig::roi_start_column)));
//#line 38 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("roi_start_column", "int", 1, "start position on the X axis for DVS region of interest", "", &DAVIS_ROS_DriverConfig::roi_start_column)));
//#line 39 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.roi_start_row = 0;
//#line 39 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.roi_start_row = 259;
//#line 39 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.roi_start_row = 0;
//#line 39 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DVS_region_of_interest.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("roi_start_row", "int", 1, "start position on the Y axis for DVS region of interest", "", &DAVIS_ROS_DriverConfig::roi_start_row)));
//#line 39 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("roi_start_row", "int", 1, "start position on the Y axis for DVS region of interest", "", &DAVIS_ROS_DriverConfig::roi_start_row)));
//#line 40 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.roi_end_column = 0;
//#line 40 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.roi_end_column = 345;
//#line 40 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.roi_end_column = 345;
//#line 40 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DVS_region_of_interest.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("roi_end_column", "int", 1, "end position on the X axis for DVS region of interest", "", &DAVIS_ROS_DriverConfig::roi_end_column)));
//#line 40 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("roi_end_column", "int", 1, "end position on the X axis for DVS region of interest", "", &DAVIS_ROS_DriverConfig::roi_end_column)));
//#line 41 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.roi_end_row = 0;
//#line 41 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.roi_end_row = 259;
//#line 41 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.roi_end_row = 259;
//#line 41 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DVS_region_of_interest.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("roi_end_row", "int", 1, "end position on the Y axis for DVS region of interest", "", &DAVIS_ROS_DriverConfig::roi_end_row)));
//#line 41 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("roi_end_row", "int", 1, "end position on the Y axis for DVS region of interest", "", &DAVIS_ROS_DriverConfig::roi_end_row)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      DVS_region_of_interest.convertParams();
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Hardware_Filters.groups.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::DVS_REGION_OF_INTEREST, DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS>(DVS_region_of_interest)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::DVS_REGION_OF_INTEREST, DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS>(DVS_region_of_interest)));
DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::APS_REGION_OF_INTEREST, DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS> APS_region_of_interest("APS_region_of_interest", "", 1, 3, true, &DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::aps_region_of_interest);
//#line 43 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.aps_roi_start_column = 0;
//#line 43 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.aps_roi_start_column = 345;
//#line 43 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.aps_roi_start_column = 0;
//#line 43 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      APS_region_of_interest.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("aps_roi_start_column", "int", 1, "start position on the X axis for APS region of interest", "", &DAVIS_ROS_DriverConfig::aps_roi_start_column)));
//#line 43 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("aps_roi_start_column", "int", 1, "start position on the X axis for APS region of interest", "", &DAVIS_ROS_DriverConfig::aps_roi_start_column)));
//#line 44 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.aps_roi_start_row = 0;
//#line 44 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.aps_roi_start_row = 259;
//#line 44 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.aps_roi_start_row = 0;
//#line 44 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      APS_region_of_interest.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("aps_roi_start_row", "int", 1, "start position on the Y axis for APS region of interest", "", &DAVIS_ROS_DriverConfig::aps_roi_start_row)));
//#line 44 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("aps_roi_start_row", "int", 1, "start position on the Y axis for APS region of interest", "", &DAVIS_ROS_DriverConfig::aps_roi_start_row)));
//#line 45 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.aps_roi_end_column = 0;
//#line 45 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.aps_roi_end_column = 345;
//#line 45 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.aps_roi_end_column = 345;
//#line 45 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      APS_region_of_interest.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("aps_roi_end_column", "int", 1, "end position on the X axis for APS region of interest", "", &DAVIS_ROS_DriverConfig::aps_roi_end_column)));
//#line 45 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("aps_roi_end_column", "int", 1, "end position on the X axis for APS region of interest", "", &DAVIS_ROS_DriverConfig::aps_roi_end_column)));
//#line 46 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.aps_roi_end_row = 0;
//#line 46 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.aps_roi_end_row = 259;
//#line 46 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.aps_roi_end_row = 259;
//#line 46 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      APS_region_of_interest.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("aps_roi_end_row", "int", 1, "end position on the Y axis for APS region of interest", "", &DAVIS_ROS_DriverConfig::aps_roi_end_row)));
//#line 46 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("aps_roi_end_row", "int", 1, "end position on the Y axis for APS region of interest", "", &DAVIS_ROS_DriverConfig::aps_roi_end_row)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      APS_region_of_interest.convertParams();
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Hardware_Filters.groups.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::APS_REGION_OF_INTEREST, DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS>(APS_region_of_interest)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::APS_REGION_OF_INTEREST, DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS>(APS_region_of_interest)));
DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::PIXEL_FILTER, DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS> Pixel_Filter("Pixel_Filter", "", 1, 4, true, &DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::pixel_filter);
//#line 48 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_0_row = 0;
//#line 48 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_0_row = 259;
//#line 48 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_0_row = 259;
//#line 48 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_0_row", "int", 1, "pixel 0, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_0_row)));
//#line 48 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_0_row", "int", 1, "pixel 0, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_0_row)));
//#line 49 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_0_column = 0;
//#line 49 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_0_column = 345;
//#line 49 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_0_column = 345;
//#line 49 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_0_column", "int", 1, "pixel 0, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_0_column)));
//#line 49 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_0_column", "int", 1, "pixel 0, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_0_column)));
//#line 50 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_1_row = 0;
//#line 50 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_1_row = 259;
//#line 50 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_1_row = 259;
//#line 50 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_1_row", "int", 1, "pixel 1, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_1_row)));
//#line 50 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_1_row", "int", 1, "pixel 1, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_1_row)));
//#line 51 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_1_column = 0;
//#line 51 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_1_column = 345;
//#line 51 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_1_column = 345;
//#line 51 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_1_column", "int", 1, "pixel 1, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_1_column)));
//#line 51 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_1_column", "int", 1, "pixel 1, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_1_column)));
//#line 52 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_2_row = 0;
//#line 52 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_2_row = 259;
//#line 52 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_2_row = 259;
//#line 52 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_2_row", "int", 1, "pixel 2, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_2_row)));
//#line 52 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_2_row", "int", 1, "pixel 2, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_2_row)));
//#line 53 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_2_column = 0;
//#line 53 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_2_column = 345;
//#line 53 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_2_column = 345;
//#line 53 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_2_column", "int", 1, "pixel 2, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_2_column)));
//#line 53 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_2_column", "int", 1, "pixel 2, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_2_column)));
//#line 54 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_3_row = 0;
//#line 54 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_3_row = 259;
//#line 54 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_3_row = 259;
//#line 54 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_3_row", "int", 1, "pixel 3, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_3_row)));
//#line 54 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_3_row", "int", 1, "pixel 3, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_3_row)));
//#line 55 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_3_column = 0;
//#line 55 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_3_column = 345;
//#line 55 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_3_column = 345;
//#line 55 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_3_column", "int", 1, "pixel 3, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_3_column)));
//#line 55 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_3_column", "int", 1, "pixel 3, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_3_column)));
//#line 56 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_4_row = 0;
//#line 56 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_4_row = 259;
//#line 56 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_4_row = 259;
//#line 56 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_4_row", "int", 1, "pixel 4, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_4_row)));
//#line 56 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_4_row", "int", 1, "pixel 4, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_4_row)));
//#line 57 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_4_column = 0;
//#line 57 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_4_column = 345;
//#line 57 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_4_column = 345;
//#line 57 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_4_column", "int", 1, "pixel 4, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_4_column)));
//#line 57 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_4_column", "int", 1, "pixel 4, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_4_column)));
//#line 58 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_5_row = 0;
//#line 58 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_5_row = 259;
//#line 58 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_5_row = 259;
//#line 58 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_5_row", "int", 1, "pixel 5, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_5_row)));
//#line 58 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_5_row", "int", 1, "pixel 5, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_5_row)));
//#line 59 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_5_column = 0;
//#line 59 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_5_column = 345;
//#line 59 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_5_column = 345;
//#line 59 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_5_column", "int", 1, "pixel 5, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_5_column)));
//#line 59 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_5_column", "int", 1, "pixel 5, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_5_column)));
//#line 60 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_6_row = 0;
//#line 60 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_6_row = 259;
//#line 60 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_6_row = 259;
//#line 60 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_6_row", "int", 1, "pixel 6, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_6_row)));
//#line 60 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_6_row", "int", 1, "pixel 6, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_6_row)));
//#line 61 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_6_column = 0;
//#line 61 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_6_column = 345;
//#line 61 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_6_column = 345;
//#line 61 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_6_column", "int", 1, "pixel 6, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_6_column)));
//#line 61 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_6_column", "int", 1, "pixel 6, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_6_column)));
//#line 62 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_7_row = 0;
//#line 62 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_7_row = 259;
//#line 62 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_7_row = 259;
//#line 62 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_7_row", "int", 1, "pixel 3, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_7_row)));
//#line 62 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_7_row", "int", 1, "pixel 3, Y axis setting", "", &DAVIS_ROS_DriverConfig::pixel_7_row)));
//#line 63 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_7_column = 0;
//#line 63 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_7_column = 345;
//#line 63 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_7_column = 345;
//#line 63 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_7_column", "int", 1, "pixel 7, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_7_column)));
//#line 63 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("pixel_7_column", "int", 1, "pixel 7, X axis setting", "", &DAVIS_ROS_DriverConfig::pixel_7_column)));
//#line 64 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.pixel_auto_train = 0;
//#line 64 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.pixel_auto_train = 1;
//#line 64 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.pixel_auto_train = 0;
//#line 64 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      Pixel_Filter.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("pixel_auto_train", "bool", 1, "enable automatic filtering of 8 most active pixels (above ~5KHz)", "", &DAVIS_ROS_DriverConfig::pixel_auto_train)));
//#line 64 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<bool>("pixel_auto_train", "bool", 1, "enable automatic filtering of 8 most active pixels (above ~5KHz)", "", &DAVIS_ROS_DriverConfig::pixel_auto_train)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Pixel_Filter.convertParams();
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Hardware_Filters.groups.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::PIXEL_FILTER, DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS>(Pixel_Filter)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS::PIXEL_FILTER, DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS>(Pixel_Filter)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Hardware_Filters.convertParams();
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.groups.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS, DAVIS_ROS_DriverConfig::DEFAULT>(Hardware_Filters)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::HARDWARE_FILTERS, DAVIS_ROS_DriverConfig::DEFAULT>(Hardware_Filters)));
DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::DAVIS_BIASES_STAGE_1, DAVIS_ROS_DriverConfig::DEFAULT> DAVIS_Biases_Stage_1("DAVIS_Biases_Stage_1", "", 0, 5, true, &DAVIS_ROS_DriverConfig::DEFAULT::davis_biases_stage_1);
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.PrBp_coarse = 0;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.PrBp_coarse = 7;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.PrBp_coarse = 2;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_1.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("PrBp_coarse", "int", 1, "Amplifier in first stage. Limits the speed. Higher=faster and more noise (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::PrBp_coarse)));
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("PrBp_coarse", "int", 1, "Amplifier in first stage. Limits the speed. Higher=faster and more noise (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::PrBp_coarse)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.PrBp_fine = 0;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.PrBp_fine = 255;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.PrBp_fine = 58;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_1.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("PrBp_fine", "int", 1, "Amplifier in first stage. Limits the speed. Higher=faster and more noise (fine, linear)", "", &DAVIS_ROS_DriverConfig::PrBp_fine)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("PrBp_fine", "int", 1, "Amplifier in first stage. Limits the speed. Higher=faster and more noise (fine, linear)", "", &DAVIS_ROS_DriverConfig::PrBp_fine)));
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.PrSFBp_coarse = 0;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.PrSFBp_coarse = 7;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.PrSFBp_coarse = 1;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_1.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("PrSFBp_coarse", "int", 1, "Source follower: set high to allow higher pixel bandwidth (has no influence if set high enough) (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::PrSFBp_coarse)));
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("PrSFBp_coarse", "int", 1, "Source follower: set high to allow higher pixel bandwidth (has no influence if set high enough) (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::PrSFBp_coarse)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.PrSFBp_fine = 0;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.PrSFBp_fine = 255;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.PrSFBp_fine = 33;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_1.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("PrSFBp_fine", "int", 1, "Source follower: set high to allow higher pixel bandwidth (has no influence if set high enough) (fine, linear)", "", &DAVIS_ROS_DriverConfig::PrSFBp_fine)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("PrSFBp_fine", "int", 1, "Source follower: set high to allow higher pixel bandwidth (has no influence if set high enough) (fine, linear)", "", &DAVIS_ROS_DriverConfig::PrSFBp_fine)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      DAVIS_Biases_Stage_1.convertParams();
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.groups.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::DAVIS_BIASES_STAGE_1, DAVIS_ROS_DriverConfig::DEFAULT>(DAVIS_Biases_Stage_1)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::DAVIS_BIASES_STAGE_1, DAVIS_ROS_DriverConfig::DEFAULT>(DAVIS_Biases_Stage_1)));
DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::DAVIS_BIASES_STAGE_2, DAVIS_ROS_DriverConfig::DEFAULT> DAVIS_Biases_Stage_2("DAVIS_Biases_Stage_2", "", 0, 6, true, &DAVIS_ROS_DriverConfig::DEFAULT::davis_biases_stage_2);
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.DiffBn_coarse = 0;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.DiffBn_coarse = 7;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.DiffBn_coarse = 4;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_2.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("DiffBn_coarse", "int", 1, "Amplifier of second stage. Indep of actual illumination level. rebalance ONBn/OFFBn after changing this (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::DiffBn_coarse)));
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("DiffBn_coarse", "int", 1, "Amplifier of second stage. Indep of actual illumination level. rebalance ONBn/OFFBn after changing this (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::DiffBn_coarse)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.DiffBn_fine = 0;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.DiffBn_fine = 255;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.DiffBn_fine = 39;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_2.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("DiffBn_fine", "int", 1, "Amplifier of second stage. Indep of actual illumination level. rebalance ONBn/OFFBn after changing this (fine, linear)", "", &DAVIS_ROS_DriverConfig::DiffBn_fine)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("DiffBn_fine", "int", 1, "Amplifier of second stage. Indep of actual illumination level. rebalance ONBn/OFFBn after changing this (fine, linear)", "", &DAVIS_ROS_DriverConfig::DiffBn_fine)));
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.ONBn_coarse = 0;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.ONBn_coarse = 7;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.ONBn_coarse = 6;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_2.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ONBn_coarse", "int", 1, "Threshold for ON events (contrast sensitivity). Must be >DiffBn. (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::ONBn_coarse)));
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ONBn_coarse", "int", 1, "Threshold for ON events (contrast sensitivity). Must be >DiffBn. (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::ONBn_coarse)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.ONBn_fine = 0;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.ONBn_fine = 255;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.ONBn_fine = 200;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_2.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ONBn_fine", "int", 1, "Threshold for ON events (contrast sensitivity). Must be >DiffBn. (fine, linear)", "", &DAVIS_ROS_DriverConfig::ONBn_fine)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ONBn_fine", "int", 1, "Threshold for ON events (contrast sensitivity). Must be >DiffBn. (fine, linear)", "", &DAVIS_ROS_DriverConfig::ONBn_fine)));
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.OFFBn_coarse = 0;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.OFFBn_coarse = 7;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.OFFBn_coarse = 4;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_2.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("OFFBn_coarse", "int", 1, "Threshold for OFF events (contrast sensitivity). Must be <DiffBn. (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::OFFBn_coarse)));
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("OFFBn_coarse", "int", 1, "Threshold for OFF events (contrast sensitivity). Must be <DiffBn. (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::OFFBn_coarse)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.OFFBn_fine = 0;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.OFFBn_fine = 255;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.OFFBn_fine = 0;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_2.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("OFFBn_fine", "int", 1, "Threshold for OFF events (contrast sensitivity). Must be <DiffBn. (fine, linear)", "", &DAVIS_ROS_DriverConfig::OFFBn_fine)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("OFFBn_fine", "int", 1, "Threshold for OFF events (contrast sensitivity). Must be <DiffBn. (fine, linear)", "", &DAVIS_ROS_DriverConfig::OFFBn_fine)));
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.RefrBp_coarse = 0;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.RefrBp_coarse = 7;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.RefrBp_coarse = 4;
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_2.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("RefrBp_coarse", "int", 1, "Maximum pixel firing rate (reset time before it can start to detect changes again) (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::RefrBp_coarse)));
//#line 77 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("RefrBp_coarse", "int", 1, "Maximum pixel firing rate (reset time before it can start to detect changes again) (coarse, logarithmic)", "", &DAVIS_ROS_DriverConfig::RefrBp_coarse)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.RefrBp_fine = 0;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.RefrBp_fine = 255;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.RefrBp_fine = 25;
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_Stage_2.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("RefrBp_fine", "int", 1, "Maximum pixel firing rate (reset time before it can start to detect changes again) (fine, linear)", "", &DAVIS_ROS_DriverConfig::RefrBp_fine)));
//#line 78 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("RefrBp_fine", "int", 1, "Maximum pixel firing rate (reset time before it can start to detect changes again) (fine, linear)", "", &DAVIS_ROS_DriverConfig::RefrBp_fine)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      DAVIS_Biases_Stage_2.convertParams();
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.groups.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::DAVIS_BIASES_STAGE_2, DAVIS_ROS_DriverConfig::DEFAULT>(DAVIS_Biases_Stage_2)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::DAVIS_BIASES_STAGE_2, DAVIS_ROS_DriverConfig::DEFAULT>(DAVIS_Biases_Stage_2)));
DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::DAVIS_BIASES_APS, DAVIS_ROS_DriverConfig::DEFAULT> DAVIS_Biases_APS("DAVIS_Biases_APS", "", 0, 7, true, &DAVIS_ROS_DriverConfig::DEFAULT::davis_biases_aps);
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.ADC_RefHigh_volt = 0;
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.ADC_RefHigh_volt = 63;
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.ADC_RefHigh_volt = 27;
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_APS.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ADC_RefHigh_volt", "int", 1, "APS ADC upper conversion limit (voltage)", "", &DAVIS_ROS_DriverConfig::ADC_RefHigh_volt)));
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ADC_RefHigh_volt", "int", 1, "APS ADC upper conversion limit (voltage)", "", &DAVIS_ROS_DriverConfig::ADC_RefHigh_volt)));
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.ADC_RefHigh_curr = 0;
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.ADC_RefHigh_curr = 7;
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.ADC_RefHigh_curr = 7;
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_APS.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ADC_RefHigh_curr", "int", 1, "APS ADC upper conversion limit (current)", "", &DAVIS_ROS_DriverConfig::ADC_RefHigh_curr)));
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ADC_RefHigh_curr", "int", 1, "APS ADC upper conversion limit (current)", "", &DAVIS_ROS_DriverConfig::ADC_RefHigh_curr)));
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.ADC_RefLow_volt = 0;
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.ADC_RefLow_volt = 63;
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.ADC_RefLow_volt = 1;
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_APS.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ADC_RefLow_volt", "int", 1, "APS ADC lower conversion limit (voltage)", "", &DAVIS_ROS_DriverConfig::ADC_RefLow_volt)));
//#line 83 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ADC_RefLow_volt", "int", 1, "APS ADC lower conversion limit (voltage)", "", &DAVIS_ROS_DriverConfig::ADC_RefLow_volt)));
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __min__.ADC_RefLow_curr = 0;
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __max__.ADC_RefLow_curr = 7;
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __default__.ADC_RefLow_curr = 7;
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      DAVIS_Biases_APS.abstract_parameters.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ADC_RefLow_curr", "int", 1, "APS ADC lower conversion limit (current)", "", &DAVIS_ROS_DriverConfig::ADC_RefLow_curr)));
//#line 84 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      __param_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr(new DAVIS_ROS_DriverConfig::ParamDescription<int>("ADC_RefLow_curr", "int", 1, "APS ADC lower conversion limit (current)", "", &DAVIS_ROS_DriverConfig::ADC_RefLow_curr)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      DAVIS_Biases_APS.convertParams();
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.groups.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::DAVIS_BIASES_APS, DAVIS_ROS_DriverConfig::DEFAULT>(DAVIS_Biases_APS)));
//#line 124 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT::DAVIS_BIASES_APS, DAVIS_ROS_DriverConfig::DEFAULT>(DAVIS_Biases_APS)));
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr(new DAVIS_ROS_DriverConfig::GroupDescription<DAVIS_ROS_DriverConfig::DEFAULT, DAVIS_ROS_DriverConfig>(Default)));
//#line 369 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    DAVIS_ROS_DriverConfig __max__;
    DAVIS_ROS_DriverConfig __min__;
    DAVIS_ROS_DriverConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const DAVIS_ROS_DriverConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static DAVIS_ROS_DriverConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &DAVIS_ROS_DriverConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const DAVIS_ROS_DriverConfig &DAVIS_ROS_DriverConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const DAVIS_ROS_DriverConfig &DAVIS_ROS_DriverConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const DAVIS_ROS_DriverConfig &DAVIS_ROS_DriverConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<DAVIS_ROS_DriverConfig::AbstractParamDescriptionConstPtr> &DAVIS_ROS_DriverConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<DAVIS_ROS_DriverConfig::AbstractGroupDescriptionConstPtr> &DAVIS_ROS_DriverConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const DAVIS_ROS_DriverConfigStatics *DAVIS_ROS_DriverConfig::__get_statics__()
  {
    const static DAVIS_ROS_DriverConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = DAVIS_ROS_DriverConfigStatics::get_instance();

    return statics;
  }

//#line 19 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_Default = 0;
//#line 20 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_Grayscale = 1;
//#line 21 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_Original = 2;
//#line 106 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_2g = 0;
//#line 107 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_4g = 1;
//#line 108 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_8g = 2;
//#line 109 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_16g = 3;
//#line 112 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_250degps = 0;
//#line 113 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_500degps = 1;
//#line 114 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_1000degps = 2;
//#line 115 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_2000degps = 3;
//#line 118 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_260hz = 0;
//#line 119 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_184hz = 1;
//#line 120 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_94hz = 2;
//#line 121 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_44hz = 3;
//#line 122 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_21hz = 4;
//#line 123 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_10hz = 5;
//#line 124 "/home/tresjsph/catkin_ws/src/rpg_dvs_ros/davis_ros_driver/cfg/DAVIS_ROS_Driver.cfg"
      const int DAVIS_ROS_Driver_5hz = 6;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __DAVIS_ROS_DRIVERRECONFIGURATOR_H__
